<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

  <description>
   Bean configuration file for the gwc-core module
  </description>

  <bean id="geoWebCacheExtensions" class="org.geowebcache.GeoWebCacheExtensions"/>
  
  <bean id="geoWebCacheEnvironment" class="org.geowebcache.GeoWebCacheEnvironment" depends-on="geoWebCacheExtensions"/>
  
  <bean id="gwcAppCtx" class="org.geowebcache.util.ApplicationContextProvider" />
  
  <!-- The location of a static configuration file for GeoWebCache. 
       By default this lives in WEB-INF/classes/geowebcache.xml -->
  <bean id="gwcXmlConfig" class="org.geowebcache.config.XMLConfiguration">
    <constructor-arg ref="gwcAppCtx" />
    <constructor-arg ref="gwcDefaultStorageFinder" />
    <!-- By default GWC will look for geowebcache.xml in {GEOWEBCACHE_CACHE_DIR},
         if not found will look at GEOSEVER_DATA_DIR/gwc/
         alternatively you can specify an absolute or relative path to a directory
         by replacing the gwcDefaultStorageFinder constructor argument above by the directory
         path, like constructor-arg value="/etc/geowebcache"     
    -->
    <property name="template" value="/geowebcache.xml">
      <description>Set the location of the template configuration file to copy over to the
        cache directory if one doesn't already exist.
      </description>
    </property>
  </bean>
  
  <!-- For each configuration bean above, add them below to activate -->
  <bean id="gwcTLDispatcher" class="org.geowebcache.layer.TileLayerDispatcher">
    <description>
      TileLayerDispatcher serves up TileLayers from the available Configurations in the application context
    </description>
    <constructor-arg ref="gwcGridSetBroker"/>
  </bean>

  <bean id="gwcBlobStoreAggregator" class="org.geowebcache.storage.BlobStoreAggregator">
    <description>
      BlobStoreAggregator serves up BlobStoreInfos from the available Configurations in the application context
    </description>
  </bean>
  
  <bean id="gwcDefaultStorageFinder" class="org.geowebcache.storage.DefaultStorageFinder">
  	<constructor-arg ref="gwcAppCtx" />
  </bean>

  <bean id="gwcBlobStore" class="org.geowebcache.storage.CompositeBlobStore" destroy-method="destroy">
    <constructor-arg ref="gwcTLDispatcher"/>
    <constructor-arg ref="gwcDefaultStorageFinder" />
    <constructor-arg ref="gwcBlobStoreAggregator"/>
    <constructor-arg ref="gwcXmlConfig"/>
  </bean>

  <bean id="gwcTransientCache" class="org.geowebcache.storage.TransientCache" >
    <description>
      In memory cache used when MetaTiling tiles that are published but not cached to disk.
    </description>    
    <constructor-arg value="100" /> <!-- Max Tiles in cache-->
    <constructor-arg value="1024" /> <!-- Max Space used by cache, in KiB -->
    <constructor-arg value="2000" /> <!-- Expire Time, in ms -->
  </bean>
  
  <!-- Static definition of where to put the blobstore. 
       Note that the directory MUST EXIST when GWC is started. -->
  <!-- bean id="gwcBlobStore" class="org.geowebcache.storage.blobstore.file.FileBlobStore" destroy-method="destroy">
    <constructor-arg value="/tmp/gwc_blobstore" />
  </bean -->
  
  <bean id="gwcStorageBroker" class="org.geowebcache.storage.DefaultStorageBroker" destroy-method="destroy">
    <constructor-arg ref="gwcBlobStore" />
    <constructor-arg ref="gwcTransientCache" />
  </bean>
  
  
  <bean id="gwcGridSetBroker" class="org.geowebcache.grid.GridSetBroker">
  </bean>
  
  <bean id="gwcDefaultGridsets" class="org.geowebcache.config.DefaultGridsets">
    <!-- Should we used EPSG:900913 instead of EPSG:3857 ? -->
    <constructor-arg type="boolean" value="TRUE" />
    <!--
      Should the default grids be named EPSG:4326 and EPSG:900913 (TRUE),
      or (FALSE) use the new names similar to what WMTS suggests,
      GlobalCRS84Geometric and GoogleMapsCompatible ? 
      
      If you say FALSE here, you have to manually
      rename the directories and entries in the H2 database.
     -->
     <constructor-arg type="boolean" value="TRUE" />
  </bean>
  
  <bean id="gwcRuntimeStats" class="org.geowebcache.stats.RuntimeStats" destroy-method="destroy">
    <!-- The poll interval, the number of seconds until counters are aggregated -->
    <constructor-arg type="int" value="3" />
    <!-- The intervals (in seconds) for which aggregates are reported.
         Each interval must be a multiple of the poll interval above and
         listed in ascending order. For example, for a maximum interval 
         of 60 seconds and 3 second poll interval from above, the amount
         of memory consumed is (60 / 3) * 8 = 160 bytes
    -->
    <constructor-arg>
      <list>
        <value>3</value>
        <value>15</value>
        <value>60</value>
      </list>
    </constructor-arg>
    <!-- Descriptive texts for each of the intervals above -->
    <constructor-arg>
      <list>
        <value>3 seconds</value>
        <value>15 seconds</value>
        <value>60 seconds</value>
      </list>
    </constructor-arg>
  </bean>
  
  <!-- controller for handling all incoming requests -->
  <bean id="geowebcacheDispatcher" class="org.geowebcache.GeorchestraGeoWebCacheDispatcher" destroy-method="destroy">
    <constructor-arg ref="gwcTLDispatcher"/>
    <constructor-arg ref="gwcGridSetBroker"/>
    <constructor-arg ref="gwcStorageBroker"/>
    <constructor-arg ref="gwcBlobStoreAggregator"/>
    <constructor-arg ref="gwcXmlConfig"/>
    <constructor-arg ref="gwcRuntimeStats"/>
    <property name="defaultStorageFinder" ref="gwcDefaultStorageFinder"/>
    <property name="securityDispatcher" ref="gwcSecurityDispatcher"/>
  </bean>
	
  <!-- Thread pool for seeding -->
  <bean id="gwcSeederThreadPoolExec" 
    class="org.geowebcache.seed.SeederThreadPoolExecutor">
    <constructor-arg value="16"/><!-- Size of core pool -->
    <constructor-arg value="32"/><!-- Maximum size of pool -->
  </bean>

  <!-- Breeder (the one that seeds) -->
  <bean id="gwcTileBreeder" class="org.geowebcache.seed.TileBreeder">
    <property name="tileLayerDispatcher" ref="gwcTLDispatcher"/>
    <property name="threadPoolExecutor" ref="gwcSeederThreadPoolExec"/>
    <property name="storageBroker" ref="gwcStorageBroker"/>
  </bean>

  <bean id="gwcProxyDispatcher"
	class="org.geowebcache.proxy.ProxyDispatcher"/>
  
  <!-- Lock providers -->
  <bean id="noLock" class="org.geowebcache.locks.NoOpLockProvider"/>


  <bean id="memoryLock" class="org.geowebcache.locks.MemoryLockProvider"/>
  
  <bean id="nioLock" class="org.geowebcache.locks.NIOLockProvider">
    <constructor-arg ref="gwcDefaultStorageFinder"/>
  </bean>

  <!-- The tool performing the automatic migration between metastore and fs hashes -->
  <bean id="metastoreRemover" class="org.geowebcache.storage.MetastoreRemover">
    <constructor-arg ref="gwcDefaultStorageFinder"/>
  </bean>

  <!--<bean id="gwcURLMangler" class="org.geowebcache.util.NullURLMangler" />-->
  <bean id="gwcURLMangler" class="org.geowebcache.util.GeorchestraURLMangler">
        <constructor-arg value="${publicUrl}" />
        <constructor-arg value="${contextPath}" />
  </bean>

  <!-- geOrchestra Commons -->
  <bean id="georchestraConfiguration" class="org.georchestra.commons.configuration.GeorchestraConfiguration">
    <constructor-arg value="geowebcache" />
  </bean>

  <context:property-placeholder location="classpath:gwc.properties"
                                ignore-resource-not-found="true"
                                ignore-unresolvable="true"
                                order="2" />
  <context:property-placeholder location="file:${georchestra.datadir}/default.properties"
                                ignore-resource-not-found="true"
                                ignore-unresolvable="true"
                                order="1" />
  <context:property-placeholder location="file:${georchestra.datadir}/geowebcache/geowebcache.properties"
                                ignore-resource-not-found="true"
                                ignore-unresolvable="true"
                                order="0" />
  
  
  <bean id="gwcSecurityDispatcher" class="org.geowebcache.filter.security.SecurityDispatcher" />
  
  <bean id="cacheConfiguration" class="org.geowebcache.storage.blobstore.memory.CacheConfiguration">
    <property name="hardMemoryLimit" value="64"/> <!-- 64 Mb -->
    <property name="policy" value="EXPIRE_AFTER_ACCESS"/> <!-- 64 Mb -->
  </bean>
  
   <bean id="guavaCacheProvider" class="org.geowebcache.storage.blobstore.memory.guava.GuavaCacheProvider">
     <constructor-arg ref="cacheConfiguration"/>
  </bean>
  
  <bean id="gwcMemoryBlobStore" class="org.geowebcache.storage.blobstore.memory.MemoryBlobStore" destroy-method="destroy">
    <property name="store" ref="gwcBlobStore" />
    <!--property name="cacheProvider" ref="guavaCacheProvider" /-->
    <!-- property name="cacheBeanName" value="guavaCacheProvider" /-->
  </bean>
  
  <bean id="gwcNullBlobStore" class="org.geowebcache.storage.blobstore.memory.NullBlobStore" destroy-method="destroy"/>
</beans>
